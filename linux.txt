apt는 리눅스의 인스톨러라고 생가하면 된다.
which aa(프로그램이름) 설치된 프로그램의 위치를 확인함.

리눅스는 도스의 개념이다
텍스트로만 만들어지는데
지금 sftp를 통해서 업로드와 다운로드는 가능한데 
app.exe처럼 실행명령을 할수없는 권한을 가지고있다.

따라서 JVM을 구동하기 위해서 서버의 터미널을 사용할수있는 권한을 받아야한다.

현재는 SFTP 만 접근이 가능하고 Ubuntu 터미널의 접근이 안되고 있어서 톰캣 설정을 할수가 없고
따라서 어플리케이션 구동도 할수없다.

1. Ubuntu에서 Java 설치하기
    sudo apt install openjdk-8-jdk
    설치가 됐는지 버전 확인
    java -version
    javac -version

    설치 경로 확인하기
    which Java
    결과값이 
    /usr/bin/java라고 나온다.
    하지만 이걸 
    cd /usr/bin
    /usr/bin$ ls -ail | grep java
    이렇게 결과를 조회해보면 
    /ect/alternavives/java
    이런식으로 나오는데 결국 이건 바로가기 경로라는 표현이다.
    cd /ect/alternavives/java
    ls -ail | grep java
    이런식으로 가서 또 찾아가고 해야하는데 지금은 딱 3번만 추적하면 원본이 나오겠지만 만약 이게 100개의 바로가기로 엮여있다면 문제다
    그럴때 쓰는 명령어가

    readlink -f /usr/bin/java
    이걸 치면 최종 결과값이 나온다.

    결과적으로
    which Java
    readlink -f /usr/bin/java
    결과값이 
    /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    로 나오게 된다.

2. Java 환경변수 설정
    sudo nano /etc/profile
    위의 파일에서 마지막에
    export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH
    export CLASS_PATH=$JAVA_HOME/lib:$CLASS_PATH
    추가하기
    저장하고 나와서
    
    프로필 리로드
    source /etc/profile 
    서버 재시작
    sudo reboot now

    재시작후에 잘 됐는지 확인
    echo $JAVA_HOME
    결과값이
    /usr/lib/jvm/java-8-openjdk-amd64
    라고 나오면 성공
    $JAVA_HOME/bin/javac -version


3. Apache Tomcat 설치하기
    사용자 폴더로 이동
    cd
    다운받기
    wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.56/bin/apache-tomcat-9.0.56.tar.gz
    압축해제
    tar xzf apache-tomcat-9.0.56.tar.gz
    압축파일 삭제
    sudo rm -f apache-tomcat-9.0.56.tar.gz
    압축 해제한 폴더 이동
    sudo mv apache-tomcat-9.0.56/ /usr/local/tomcat9

    지금은 처음 인스턴스 만들때 설정을 안해줘서 인스턴트 인바운드 보안설정 다시 해줬음.
    인스턴스-보안-보안그룹 클릭-에디트 인바운드 룰
    Type: "Custom TCP Rule"로 변경
    Port Range: "8080" 으로 변경
    Source: "0.0.0.0/0" 으로 변경

    일단 여기까지 해서 고양이 봤음!!!!!!!!!!
    나중에 필요할경우 밑에 환경설정 해보자

    혹시 나중에 파일질라 파일 전송이 안될경우 이거 해보기!!!!!!!!!!!!!!!!!!!!!!!!!!
    sudo chmod 777 /usr/local
    아니면 그냥 ubuntu폴더에 옮기고 그다음 터미널에서 
    sudo mv springBoot-webSerivce.war /usr/share/tomcat8/webapps
    이런식으로 옮겨주기

    환경설정
    sudo nano /etc/profile
    export CATALINA_HOME=/usr/local/tomcat9
    export CLASSPATH=
    에
    $CATALINA_HOME/lib/jsp-api.jar:$CATALINA_HOME/lib/servlet-api.jar
    추가
    PATH
    에
    :$CATALINA_HOME/bin
    추가


4. firewall 설치후에 8080포트로 들어갈수있게 설정 변경
    기본적으로 리눅스는 외부에서 접속을 차단하게 설정이 되어있기때문에 이걸 해줘야 외부 다른 컴퓨터에서 접속이 가능해짐.
    apt install firewalld
    firewall-cmd --permanent --add-port=8080/tcp
    firewall-cmd --reload

5. SSH설치
    apt install openssh-server
    firewall-cmd --permanent --add-port=22/tcp
    firewall-cmd --reload

6. putty나 xshell같은 프로그램 이용해서 서버 IP에 SSH 접속(port=22)
    기본적으로 root사용자는 SSH에서 접속을 막아놓게 된다. root사용자의 접속을 허용하려면
    gedit(에디터이름) /etc/ssh/sshd_config

    34번 라인 수정
    PermitRootLogin yes
    (제일 앞에 #이 있는건 주석이므로 #을 지워줘야함)

    서비스 재시작
    service ssh restart

7. eclipse에서 WAR file(Web밑에 있음.)로 Java프로젝트 export.

8. 이제 fileZilla(sftp)로 접속을 한다.
    밑에 디렉토리는 다를수있음.
    하여간 톰캣밑에 webapps폴더에 war파일을 올려준다.
    /home/user/tomcat9/webapps

9. 리눅스 서버에서 톰캣을 재식작 해주면 자동으로 war파일을 풀어서 배포해줌.
    톰캣 끄기
    /home/user/tomcat9/bin/shutdown.sh

    톰캣 켜기
    /home/user/tomcat9/bin/startup.sh

10. 윈도우에서 접속이 되는지 확인

11. mysql설치(시간이 오래걸림)
    apt -y install mysql-server(-y는 중간에 물어보는거 그냥 yes로 설정)

    mysql 서비스 상태 확인
    systemctl status mysql.sevice
    나가기(컨트롤+c)

    mysql로 들어가기
    mysql

    여기부터는 linux안에 mysql에서 실행시키기

    데이터베이스 만들기
    create database 데이터베이스이름;

    alter user'root'@'localhost' identified by '비번';(이건 리눅스 안에서만 접속이 가능한 root유저에 관한 비번 설정)
    
    create user 'root'@'%' identified by '비번';(이건 외부에서도 접속이 가능한것)

    flush privileges;

    이제 일반계정 margit을 만들어서 권한부여
    create user'margit'@'localhost' identified by '비번';
    create user 'margit'@'%' identified by '비번';

    flush privileges;

    grant all privileges on 데이터베이스이름.* to 'margit'@'%';
    grant all privileges on 데이터베이스이름.* to 'margit'@'localhost';
    (데이터베이스이름.* 은 데이터베이스에 있는 모든 테이블을 의미)

    mysql 터미널 종료
    exit

12. mysql 외부접속을 위해 포트 열어주기

    firewall-cmd --permanent --add-port=3306/tcp
    firewall-cmd --reload

13. mysql은 기본적으로 자체 설정이 외부접속이 차단되어있음. 그래서 그걸 풀어줘야함.

    gedit /etc/mysql/mysql.conf.d/mysqld.cnf
    위의 설정파일에서
    31번 라인 bind-adress = 127.0.0.1 주석처리
    31번 라인 bind-adress = * 로 변경

    mysql 재시작
    systemctl restart mysql.service

14. HeidiSql로 서버 아이디 입력하고 아이디 비번 치고 들어가서 데이터베이스 임포트 해오면 됨.

asdkhabwhaslb
asodb
asdjbqwpoiu