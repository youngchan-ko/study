ec2에서 인스턴스 생성

1. Ubuntu에서 Java 설치하기
    sudo apt-get update
    sudo apt install openjdk-8-jdk
    설치가 됐는지 버전 확인
    java -version
    javac -version

    설치 경로 확인하기
    which java
    결과값이 
    /usr/bin/java라고 나온다.
    하지만 이걸 
    cd /usr/bin
    /usr/bin$ ls -ail | grep java
    이렇게 결과를 조회해보면 
    /ect/alternavives/java
    이런식으로 나오는데 결국 이건 바로가기 경로라는 표현이다.
    cd /ect/alternavives/java
    ls -ail | grep java
    이런식으로 가서 또 찾아가고 해야하는데 지금은 딱 3번만 추적하면 원본이 나오겠지만 만약 이게 100개의 바로가기로 엮여있다면 문제다
    그럴때 쓰는 명령어가

    readlink -f /usr/bin/java
    이걸 치면 최종 결과값이 나온다.

    결과적으로
    which Java
    readlink -f /usr/bin/java
    결과값이 
    /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    로 나오게 된다.

2. Java 환경변수 설정
    sudo nano /etc/profile
    위의 파일에서 마지막에
    export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH
    export CLASS_PATH=$JAVA_HOME/lib:$CLASS_PATH
    추가하기
    저장하고 나와서
    
    프로필 리로드
    source /etc/profilesource /etc/profile 
    서버 재시작
    sudo reboot now

    재시작후에 잘 됐는지 확인
    echo $JAVA_HOME
    결과값이
    /usr/lib/jvm/java-8-openjdk-amd64
    라고 나오면 성공
    $JAVA_HOME/bin/javac -version

3. 쉘 스크립트 작성
    파일 위치는 어디에 위치해도 상관이 없어서 현재는 /home/ubuntu에서 만듦
    
    파일 만들기
    sudo nano /home/ubuntu/run.sh

    run 파일 내용 채우기
SERVICE_NAME=서비스명
PATH_TO_JAR=실행할 JAR 파일 path.jar
PID_PATH_NAME=./서비스명.pid
JAVA_OPT="-Xms2048m -Xmx2048m -XX:PermSize=256m -XX:MaxPermSize=512m"
case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            nohup java -jar $JAVA_OPT $PATH_TO_JAR >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is already running ..."
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stoping ..."
            kill $PID;
            echo "$SERVICE_NAME stopped ..."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ...";
            kill $PID;
            echo "$SERVICE_NAME stopped ...";
            rm $PID_PATH_NAME
            echo "$SERVICE_NAME starting ..."
            nohup java -jar $JAVA_OPT $PATH_TO_JAR >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
esac

4. sudo chmod 755 /home/ubuntu/run.sh
이렇게 권한 부여 후에

5. 
./run.sh start
./run.sh restart
./run.sh stop
으로 서버를 시작/재시작/중지 시킬 수 있다

해당 프로세스 PID 정보는 PID_PATH_NAME 에 저장이 되며
JAVA_OPT 에 JVM 옵션을 지정할 수 있다.

현재 시작/재시작 시 /dev/null로 리다이렉트를 하고 있는데, 이를 log파일 이름으로 바꾸게 되면 현재 데몬 실행을 하는 로그를 남기게 된다.

nohup java -jar -Dspring.profiles.active=prod $JAVA_OPT $PATH_TO_JAR >> daemon.log 와 같이 고치면 daemon.log에 현재 실행 로그가 남는다.

6. 이렇게 하니까 서버는 실행이 됐지만 브라우저 접속이 안되는 오류가발생
로그 파일을 열어서 로그를 확인하니
error='Cannot allocate memory' (errno=12)
에러를 확인 할 수 있었다.

free -h
이 명령어로 메모리를 확인할수 있다.
확인해보면 swap 용량이 0인것을 확인할수있다.
swap 공간을 만들어주도록 하자

swap 파일 만들기 
(루트 폴더에 만들경우 파일 크기는 이렇게 안써도 된다)
sudo fallocate -l 2G /swapfile
(원하는 디렉토리 지정해서 만들경우 이것도 크기는 2기가바이트)
sudo dd if=/dev/zero of=/swapfile bs=128M count=16

스왑파일 읽기쓰기 권한 업데이트
sudo chmod 600 /swapfile

만든 파일을 스왑파일로 등록
sudo mkswap /swapfile
sudo swapon /swapfile

이것으로 스왑이 생성되며 재부팅 이후에도 계속 사용하려면 /etc/fstab 파일을 수정합니다.
sudo nano /etc/fstab
제일 밑에
/swapfile swap swap defaults 0 0
추가

잘 등록 되었는지 확인
free -h


7. run as 에서 maven build 
골 옵션은 package
그럼 target폴더 안에 jar파일이 보인다.
(없을경우 메이븐 업데이트)

8. mysql 설치
다운로드
wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.20-1_all.deb

패키지설치
sudo dpkg -i mysql-apt-config_0.8.20-1_all.deb

업데이트
sudo apt-get update
mysql설치
sudo apt-get install mysql-server

자바 어플리케이션 안에서 mysql위치 바꿔주기
(지금 어플리케이션에서는 application.yml 안에서 localhost에서 ip주소로 바꾸기)

heidiSql에서 익스포트 메뉴에서
데이터베이스 생성 체크
테이블 생성 체크
데이터 삽입 선택 후
파일 만들기

이렇게 하면 jpa에서는 엔티티 이름으로 테이블 이름을 만들기때문에 
대소문자 구분이 필요해진다.
하지만 mysql에서는 대소문자 구분 안하고 소문자로만 만듦.
그래서 heidiSql에서 SQL내보내기를 한 sql파일을 vscode로 열어서 
테이블 만드는 쿼리에서 직접 수동으로 카멜 표기법으로 바꿔줬다.
그리고 Dao파일에서도 테이블 이름을 다 수정해줌.
그래서 성공














서버 mysql에서 임포트하기
source /home/ubuntu/margitDB.sql

ec2 인스턴스 보안 인바운드 규칙 변경
mysql 선택해서 3306포트 열어주기

드디어 홈페이지 보임!!!!!!!!!!


9. 어플리케이션에 지정된 이미지 폴더 서버에 만들기

폴더 만들기
sudo mkdir /폴더이름
이렇게 만들기만 하면 루트에게만 권한이 있어서 업로드가 안됨.

폴더에 권한 풀어주기
sudo chmod 777 /폴더이름

파일질라에서 업로드 하기



그런데 이렇게 하면 이유는 아직 모르겠지만 이미지 파일을 못불러온다.
하지만 브라우저에서 다시 업로드 하면 그 파일은 다 보인다.
현재는 좃같게도 브라우저에서 다시 일일이 수동으로 업로드를 다시 해줬다.
그래도 일단 잘 돌아간다.
그래도 일단 좃같다.









